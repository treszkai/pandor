/Users/L/miniconda3/bin/python /Users/L/Sync/Documents/Edinburgh/Dissertation/pandor/source/pandor.py
DEBUG:root:AND: at history []
INFO:root:AND: Simulating s: (4, 0), q: 0
INFO:root:OR: checkpoint at q: 0, s: (4, 0)
    with history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:OR: Added:   (0,False) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Simulating s: (3, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9)]
INFO:root:AND: Simulating s: (2, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9)]
INFO:root:AND: Simulating s: (1, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 0)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:OR: Added:   (0,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 0
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9)]
INFO:root:AND: Simulating s: (1, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1)]
INFO:root:AND: Simulating s: (1, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (0,True) -> (0,stop)
INFO:root:OR: Added:   (0,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: loop to level 4 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (0,fwd)
INFO:root:OR: Added:   (0,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (0,left)
INFO:root:OR: Added:   (0,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (0,right)
INFO:root:OR: Added:   (0,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 1
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9)]
INFO:root:AND: Simulating s: (1, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1)]
INFO:root:AND: Simulating s: (1, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (0,True) -> (1,stop)
INFO:root:OR: Added:   (0,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 0)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 0
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: loop to level 4 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.310784210526316}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.310784210526316}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.310784210526316}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 1
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (1,True) -> (1,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: loop to level 5 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (1,fwd)
INFO:root:OR: Added:   (0,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (1,left)
INFO:root:OR: Added:   (0,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, -1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (1,right)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 0, s: (1, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (3, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (4, 0)) with len 1
INFO:root:OR: Deleted: (0,False) -> (0,fwd)
INFO:root:OR: Added:   (0,False) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Simulating s: (4, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (4, 1), p: 1.0)]
INFO:root:AND: Simulating s: (4, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (4, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (4, 0)) with len 1
INFO:root:OR: Deleted: (0,False) -> (0,left)
INFO:root:OR: Added:   (0,False) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Simulating s: (4, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (4, -1), p: 1.0)]
INFO:root:AND: Simulating s: (4, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 0, s: (4, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (4, 0)) with len 1
INFO:root:OR: Deleted: (0,False) -> (0,right)
INFO:root:OR: Added:   (0,False) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (4, 0)) with len 1
INFO:root:OR: Deleted: (0,False) -> (0,stop)
INFO:root:OR: Added:   (0,False) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Simulating s: (3, 0), q: 1
INFO:root:OR: checkpoint at q: 1, s: (3, 0)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:OR: Added:   (1,False) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Simulating s: (2, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9)]
INFO:root:AND: Simulating s: (1, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 0)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:OR: Added:   (0,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 0
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Simulating s: (1, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1)]
INFO:root:AND: Simulating s: (1, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1), (q: 1, s: (1, -1), p: 1.0)]
INFO:root:AND: Simulating s: (1, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1), (q: 1, s: (1, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (0,True) -> (0,stop)
INFO:root:OR: Added:   (0,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: loop to level 4 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (0,fwd)
INFO:root:OR: Added:   (0,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (0,left)
INFO:root:OR: Added:   (0,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (0,right)
INFO:root:OR: Added:   (0,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 1
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Simulating s: (1, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1)]
INFO:root:AND: Simulating s: (1, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1), (q: 1, s: (1, -1), p: 1.0)]
INFO:root:AND: Simulating s: (1, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1), (q: 1, s: (1, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (1, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (0,True) -> (1,stop)
INFO:root:OR: Added:   (0,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 0)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 0
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: loop to level 4 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.310784210526316}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.310784210526316}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.310784210526316}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 1
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (1,True) -> (1,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: loop to level 5 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (1,fwd)
INFO:root:OR: Added:   (0,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (1,left)
INFO:root:OR: Added:   (0,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, -1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, -1)) with len 6
INFO:root:OR: Deleted: (1,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 5
INFO:root:OR: Deleted: (0,True) -> (1,right)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (2, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (3, 0)) with len 2
INFO:root:OR: Deleted: (1,False) -> (0,fwd)
INFO:root:OR: Added:   (1,False) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Simulating s: (3, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0)]
INFO:root:AND: Simulating s: (2, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0)]
INFO:root:AND: Simulating s: (2, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0)]
INFO:root:AND: Simulating s: (1, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0)]
INFO:root:AND: Simulating s: (1, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:OR: Added:   (0,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,fwd)
INFO:root:OR: Added:   (0,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,left)
INFO:root:OR: Added:   (0,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,right)
INFO:root:OR: Added:   (0,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.9, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,stop)
INFO:root:OR: Added:   (0,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,fwd)
INFO:root:OR: Added:   (0,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,left)
INFO:root:OR: Added:   (0,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.81}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.81}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.81}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.81}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.81}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,right)
INFO:root:OR: Added:   (0,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.9, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 8
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:OR: Added:   (0,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,fwd)
INFO:root:OR: Added:   (0,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,left)
INFO:root:OR: Added:   (0,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,right)
INFO:root:OR: Added:   (0,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.9, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,stop)
INFO:root:OR: Added:   (0,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,fwd)
INFO:root:OR: Added:   (0,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,left)
INFO:root:OR: Added:   (0,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,right)
INFO:root:OR: Added:   (0,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.9, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 8
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 0)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:OR: Added:   (0,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: win, q: 0
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Simulating s: (4, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, -1), p: 0.1)]
INFO:root:AND: Simulating s: (4, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, -1), p: 0.1), (q: 0, s: (4, -1), p: 1.0)]
INFO:root:AND: Simulating s: (4, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.1}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, -1), p: 0.1), (q: 0, s: (4, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.1}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.1}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Redoing s: (3, 0)
INFO:root:OR: redoing: (1,False) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Redoing s: (3, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0)]
INFO:root:AND: Redoing s: (2, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0)]
INFO:root:AND: Redoing s: (2, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0)]
INFO:root:AND: Redoing s: (1, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0)]
INFO:root:AND: Redoing s: (1, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0)]
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: redoing: (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (0,True) -> (0,stop)
INFO:root:OR: Added:   (0,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: loop to level 8 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9000000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9000000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,fwd)
INFO:root:OR: Added:   (0,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,left)
INFO:root:OR: Added:   (0,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,right)
INFO:root:OR: Added:   (0,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: win, q: 1
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0)]
INFO:root:OR: AND returned 0
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Simulating s: (4, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, -1), p: 0.1)]
INFO:root:AND: Simulating s: (4, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, -1), p: 0.1), (q: 0, s: (4, -1), p: 1.0)]
INFO:root:AND: Simulating s: (4, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.1}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, -1), p: 0.1), (q: 0, s: (4, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.1}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.9, 'fail': 0.0, 'noter': 0.1}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Redoing s: (3, 0)
INFO:root:OR: redoing: (1,False) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Redoing s: (3, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0)]
INFO:root:AND: Redoing s: (2, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0)]
INFO:root:AND: Redoing s: (2, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0)]
INFO:root:AND: Redoing s: (1, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0)]
INFO:root:AND: Redoing s: (1, 1)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0)]
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: redoing: (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (0,True) -> (1,stop)
INFO:root:OR: Added:   (0,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.81}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.81}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.81}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.81}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,fwd)
INFO:root:OR: Added:   (0,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,left)
INFO:root:OR: Added:   (0,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,right)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 8
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.9, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 8
INFO:root:OR: Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 8
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 8
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 8
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.9, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 8
INFO:root:OR: Deleted: (1,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (3, 0)) with len 2
INFO:root:OR: Deleted: (1,False) -> (0,left)
INFO:root:OR: Added:   (1,False) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Simulating s: (3, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, -1), p: 1.0)]
INFO:root:AND: Simulating s: (3, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, -1), p: 1.0), (q: 1, s: (3, -1), p: 1.0)]
INFO:root:AND: Simulating s: (3, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, -1), p: 1.0), (q: 1, s: (3, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 0, s: (3, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (3, 0)) with len 2
INFO:root:OR: Deleted: (1,False) -> (0,right)
INFO:root:OR: Added:   (1,False) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.9, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (3, 0)) with len 2
INFO:root:OR: Deleted: (1,False) -> (0,stop)
INFO:root:OR: Added:   (1,False) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Simulating s: (2, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9)]
INFO:root:AND: Simulating s: (1, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 0)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 0
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Simulating s: (1, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (1, -1), p: 0.1)]
INFO:root:AND: Simulating s: (1, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (1, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 0)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:OR: Added:   (0,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 0
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (0,True) -> (0,stop)
INFO:root:OR: Added:   (0,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: loop to level 5 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,fwd)
INFO:root:OR: Added:   (0,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,left)
INFO:root:OR: Added:   (0,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,right)
INFO:root:OR: Added:   (0,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 1
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.5904900000000002, 'fail': 0.06561000000000002, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (0,True) -> (1,stop)
INFO:root:OR: Added:   (0,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: loop to level 4 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.310784210526316}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.310784210526316}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.310784210526316}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,fwd)
INFO:root:OR: Added:   (0,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,left)
INFO:root:OR: Added:   (0,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.5904900000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 0)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,right)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 5
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:OR: Added:   (0,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,fwd)
INFO:root:OR: Added:   (0,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,left)
INFO:root:OR: Added:   (0,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,right)
INFO:root:OR: Added:   (0,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,stop)
INFO:root:OR: Added:   (0,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,fwd)
INFO:root:OR: Added:   (0,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,left)
INFO:root:OR: Added:   (0,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,right)
INFO:root:OR: Added:   (0,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 5
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, -1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:OR: Added:   (0,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, -1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,fwd)
INFO:root:OR: Added:   (0,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, -1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,left)
INFO:root:OR: Added:   (0,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, -1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,right)
INFO:root:OR: Added:   (0,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, -1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (0,stop)
INFO:root:OR: Added:   (0,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, -1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,fwd)
INFO:root:OR: Added:   (0,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, -1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,left)
INFO:root:OR: Added:   (0,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, -1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,right)
INFO:root:OR: Added:   (0,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.6561000000000001, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, -1)) with len 6
INFO:root:OR: Deleted: (0,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 5
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: win, q: 1
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:OR: AND step didn't fail
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Simulating s: (1, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (1, -1), p: 0.1)]
INFO:root:AND: Simulating s: (1, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (1, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.6561000000000001, 'fail': 0.0, 'noter': 0.07290000000000002}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Backtracking left
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Redoing s: (0, 0)
INFO:root:OR: (redoing) Deleted: (1,True) -> (1,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: loop to level 4 with prob 0.9
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.0}
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 0.1)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000003}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 5
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 5
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.6561000000000001}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 0)) with len 5
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9), (q: 1, s: (1, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (2, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (3, 0)) with len 2
INFO:root:OR: Deleted: (1,False) -> (1,fwd)
INFO:root:OR: Added:   (1,False) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Simulating s: (3, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (3, 1), p: 1.0)]
INFO:root:AND: Simulating s: (3, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (3, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (3, 0)) with len 2
INFO:root:OR: Deleted: (1,False) -> (1,left)
INFO:root:OR: Added:   (1,False) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Simulating s: (3, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (3, -1), p: 1.0)]
INFO:root:AND: Simulating s: (3, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9), (q: 1, s: (3, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (3, 0)) with len 2
INFO:root:OR: Deleted: (1,False) -> (1,right)
INFO:root:OR: Added:   (1,False) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.9, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (3, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (3, 0)) with len 2
INFO:root:OR: Deleted: (1,False) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (4, 0)) with len 1
INFO:root:OR: Deleted: (0,False) -> (1,fwd)
INFO:root:OR: Added:   (0,False) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0)]
INFO:root:AND: Simulating s: (4, 1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (4, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0)]
INFO:root:OR: Added:   (1,False) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0)]
INFO:root:AND: Simulating s: (3, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0)]
INFO:root:AND: Simulating s: (3, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0)]
INFO:root:AND: Simulating s: (2, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0)]
INFO:root:AND: Simulating s: (2, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0)]
INFO:root:AND: Simulating s: (1, 1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0)]
INFO:root:AND: Simulating s: (1, 1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:OR: Added:   (0,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,fwd)
INFO:root:OR: Added:   (0,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,left)
INFO:root:OR: Added:   (0,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,right)
INFO:root:OR: Added:   (0,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (0,stop)
INFO:root:OR: Added:   (0,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Simulating s: (0, -1), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9), (q: 0, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0), (q: 1, s: (0, 0), p: 0.9)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.9, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 0.9}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,fwd)
INFO:root:OR: Added:   (0,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 1)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:OR: Added:   (1,True) -> (0,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (0,fwd)
INFO:root:OR: Added:   (1,True) -> (0,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (0,left)
INFO:root:OR: Added:   (1,True) -> (0,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 0
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 0, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (0,right)
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 0
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (0,stop)
INFO:root:OR: Added:   (1,True) -> (1,fwd)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (1,fwd)
INFO:root:OR: Added:   (1,True) -> (1,left)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (1,left)
INFO:root:OR: Added:   (1,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Simulating s: (0, -1), q: 1
INFO:root:OR: repeated state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0), (q: 1, s: (0, -1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 0.0, 'noter': 1.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (1,right)
INFO:root:OR: Added:   (1,True) -> (1,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: fail, q: 1
INFO:root:OR: terminated in NOT goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1)) with len 10
INFO:root:OR: Deleted: (1,True) -> (1,stop)
INFO:root:OR: all extensions failed
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 0.0, 'fail': 1.0, 'noter': 0.0}
INFO:root:AND: fail at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1)) with len 9
INFO:root:OR: Deleted: (0,True) -> (1,left)
INFO:root:OR: Added:   (0,True) -> (1,right)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0)]
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 0)
    with history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:OR: Added:   (1,True) -> (0,stop)
DEBUG:root:AND: at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]
INFO:root:AND: Simulating s: win, q: 0
INFO:root:OR: terminated in goal state
DEBUG:root:AND: (before calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: (after  calc) alpha['noter'] = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
DEBUG:root:AND: likelihoods: {'win': 1.0, 'fail': 0.0, 'noter': 0.0}
INFO:root:AND: succeed at history [(q: 0, s: (4, 0), p: 1.0), (q: 1, s: (4, 1), p: 1.0), (q: 0, s: (3, 1), p: 1.0), (q: 1, s: (3, 1), p: 1.0), (q: 0, s: (2, 1), p: 1.0), (q: 1, s: (2, 1), p: 1.0), (q: 0, s: (1, 1), p: 1.0), (q: 1, s: (1, 1), p: 1.0), (q: 0, s: (0, 1), p: 1.0), (q: 1, s: (0, 0), p: 1.0)]

{'win': 1.0, 'fail': 0.0, 'noter': 0.0}
Controller found with max  2 states.
(0,False) → (1,left)
(1,False) → (0,fwd)
(0,True) → (1,right)
(1,True) → (0,stop)
Num. of steps taken: 349
Num. of backtracks: 286

Process finished with exit code 0
