/Users/L/miniconda3/bin/python /Users/L/Sync/Documents/Edinburgh/Dissertation/pandor/source/pandor.py
INFO:root:AND: Simulating s: (4, 0), q: 0
INFO:root:OR: checkpoint at q: 0, s: (4, 0)
    with history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:OR: Added:   (0,False) -> (0,1)
INFO:root:AND: Simulating s: (3, 0), q: 0
INFO:root:AND: Simulating s: (2, 0), q: 0
INFO:root:AND: Simulating s: (1, 0), q: 0
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: in goal state, new lower bound: 0.656
INFO:root:AND: Simulating s: (1, -1), q: 0
INFO:root:OR: illegal action 1 in state (1, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 0, s: (3, 0), l: 0.900), (q: 0, s: (2, 0), l: 0.810), (q: 0, s: (1, 0), l: 0.729)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 0, s: (3, 0), l: 0.900), (q: 0, s: (2, 0), l: 0.810)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 0, s: (3, 0), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (4, 0))
INFO:root:OR: Deleted: (0,False) -> (0,1)
INFO:root:OR: Added:   (0,False) -> (0,0)
INFO:root:AND: Simulating s: (4, 1), q: 0
INFO:root:AND: Simulating s: (4, 1), q: 0
INFO:root:OR: repeated state, new upper bound: 0.000
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 0, s: (4, 1), l: 1.000)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (4, 0))
INFO:root:OR: Deleted: (0,False) -> (0,0)
INFO:root:OR: Added:   (0,False) -> (0,2)
INFO:root:AND: Simulating s: (4, -1), q: 0
INFO:root:OR: illegal action 2 in state (4, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (4, 0))
INFO:root:OR: Deleted: (0,False) -> (0,2)
INFO:root:OR: Added:   (0,False) -> (1,1)
INFO:root:AND: Simulating s: (3, 0), q: 1
INFO:root:OR: checkpoint at q: 1, s: (3, 0)
    with history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:OR: Added:   (1,False) -> (0,1)
INFO:root:AND: Simulating s: (2, 0), q: 0
INFO:root:AND: Simulating s: (1, 0), q: 1
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: in goal state, new lower bound: 0.656
INFO:root:AND: Simulating s: (1, -1), q: 0
INFO:root:OR: illegal action 1 in state (1, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (2, 0), l: 0.810), (q: 1, s: (1, 0), l: 0.729)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (2, 0), l: 0.810)]
INFO:root:AND: Backtracking up
INFO:root:OR: AND returned -1 and now backtracking
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (3, 0))
INFO:root:OR: Deleted: (1,False) -> (0,1)
INFO:root:OR: Added:   (1,False) -> (0,0)
INFO:root:AND: Simulating s: (3, 1), q: 0
INFO:root:AND: Simulating s: (2, 1), q: 1
INFO:root:AND: Simulating s: (2, 1), q: 0
INFO:root:AND: Simulating s: (1, 1), q: 1
INFO:root:AND: Simulating s: (1, 1), q: 0
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (0, 1)
    with history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:OR: Added:   (1,True) -> (0,1)
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 1)
    with history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:OR: Added:   (0,True) -> (0,1)
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state, new upper bound: 0.100
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (0,1)
INFO:root:OR: Added:   (0,True) -> (0,0)
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state, new upper bound: 0.100
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (0,0)
INFO:root:OR: Added:   (0,True) -> (0,2)
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: in goal state, new lower bound: 0.900
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900)]
INFO:root:OR: AND returned 0
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900)]
INFO:root:OR: AND returned 0
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900)]
INFO:root:OR: AND returned 0
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900)]
INFO:root:OR: AND returned 0
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900)]
INFO:root:OR: AND returned 0
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: Simulating s: (4, -1), q: 1
INFO:root:OR: illegal action 0 in state (4, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking left
INFO:root:AND: Redoing s: (3, 0)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (3, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: redoing: (1,True) -> (0,1)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: (redoing) Deleted: (0,True) -> (0,2)
INFO:root:OR: Added:   (0,True) -> (1,1)
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state, new upper bound: 0.000
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (1,1)
INFO:root:OR: Added:   (0,True) -> (1,0)
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state, new upper bound: 0.100
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (1,0)
INFO:root:OR: Added:   (0,True) -> (1,2)
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: in goal state, new lower bound: 0.900
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: Simulating s: (4, -1), q: 1
INFO:root:OR: illegal action 0 in state (4, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking left
INFO:root:AND: Redoing s: (3, 0)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (3, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: redoing: (1,True) -> (0,1)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: (redoing) Deleted: (0,True) -> (1,2)
INFO:root:OR: all extensions failed, new upper bound: 0.000
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1))
INFO:root:OR: Deleted: (1,True) -> (0,1)
INFO:root:OR: Added:   (1,True) -> (0,0)
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 1)
    with history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:OR: Added:   (0,True) -> (0,1)
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state, new upper bound: 0.100
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (0,1)
INFO:root:OR: Added:   (0,True) -> (0,0)
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state, new upper bound: 0.100
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (0,0)
INFO:root:OR: Added:   (0,True) -> (0,2)
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: in goal state, new lower bound: 0.900
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: Simulating s: (4, -1), q: 1
INFO:root:OR: illegal action 0 in state (4, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking left
INFO:root:AND: Redoing s: (3, 0)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (3, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: redoing: (1,True) -> (0,0)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: (redoing) Deleted: (0,True) -> (0,2)
INFO:root:OR: Added:   (0,True) -> (1,1)
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state, new upper bound: 0.000
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (1,1)
INFO:root:OR: Added:   (0,True) -> (1,0)
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state, new upper bound: 0.100
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (1,0)
INFO:root:OR: Added:   (0,True) -> (1,2)
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: in goal state, new lower bound: 0.900
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: Simulating s: (4, -1), q: 1
INFO:root:OR: illegal action 0 in state (4, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking left
INFO:root:AND: Redoing s: (3, 0)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (3, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: redoing: (1,True) -> (0,0)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: (redoing) Deleted: (0,True) -> (1,2)
INFO:root:OR: all extensions failed, new upper bound: 0.000
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1))
INFO:root:OR: Deleted: (1,True) -> (0,0)
INFO:root:OR: Added:   (1,True) -> (0,2)
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: in goal state, new lower bound: 0.900
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: Simulating s: (4, -1), q: 1
INFO:root:OR: illegal action 0 in state (4, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking left
INFO:root:AND: Redoing s: (3, 0)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (3, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: (redoing) Deleted: (1,True) -> (0,2)
INFO:root:OR: Added:   (1,True) -> (1,1)
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state, new upper bound: 0.000
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1))
INFO:root:OR: Deleted: (1,True) -> (1,1)
INFO:root:OR: Added:   (1,True) -> (1,0)
INFO:root:AND: Simulating s: (0, 1), q: 1
INFO:root:OR: repeated state, new upper bound: 0.100
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 1, s (0, 1))
INFO:root:OR: Deleted: (1,True) -> (1,0)
INFO:root:OR: Added:   (1,True) -> (1,2)
INFO:root:AND: Simulating s: (0, 0), q: 1
INFO:root:OR: in goal state, new lower bound: 0.900
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: Simulating s: (4, -1), q: 1
INFO:root:OR: illegal action 0 in state (4, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking left
INFO:root:AND: Redoing s: (3, 0)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (3, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (2, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (1,False) -> (0,0)
INFO:root:AND: Redoing s: (1, 1)
INFO:root:OR: redoing: (0,False) -> (1,1)
INFO:root:AND: Redoing s: (0, 1)
INFO:root:OR: (redoing) Deleted: (1,True) -> (1,2)
INFO:root:OR: all extensions failed, new upper bound: 0.000
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [(0, (3, 1), 0.9), (1, (2, 1), 0.9), (0, (2, 1), 0.9), (1, (1, 1), 0.9), (0, (1, 1), 0.9)] at (q 0, s (1, 1))
INFO:root:OR: Deleted: (1,False) -> (0,0)
INFO:root:OR: Added:   (0,False) -> (1,0)
INFO:root:AND: Simulating s: (3, 1), q: 1
INFO:root:OR: checkpoint at q: 1, s: (3, 1)
    with history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900)]
INFO:root:OR: Added:   (1,False) -> (0,1)
INFO:root:AND: Simulating s: (2, 1), q: 0
INFO:root:AND: Simulating s: (2, 1), q: 1
INFO:root:AND: Simulating s: (1, 1), q: 0
INFO:root:AND: Simulating s: (1, 1), q: 1
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: checkpoint at q: 0, s: (0, 1)
    with history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:OR: Added:   (0,True) -> (0,1)
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state, new upper bound: 0.100
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (0,1)
INFO:root:OR: Added:   (0,True) -> (0,0)
INFO:root:AND: Simulating s: (0, 1), q: 0
INFO:root:OR: repeated state, new upper bound: 0.100
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:AND: Backtracking up
INFO:root:OR: Backstep: [] at (q 0, s (0, 1))
INFO:root:OR: Deleted: (0,True) -> (0,0)
INFO:root:OR: Added:   (0,True) -> (0,2)
INFO:root:AND: Simulating s: (0, 0), q: 0
INFO:root:OR: in goal state, new lower bound: 0.900
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900), (q: 0, s: (0, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900)]
INFO:root:OR: AND returned 0
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (1, 1), l: 0.900)]
INFO:root:OR: AND returned 0
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900)]
INFO:root:OR: AND returned 0
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900)]
INFO:root:OR: AND returned 0
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 1, s: (3, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900), (q: 1, s: (1, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900), (q: 0, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900), (q: 1, s: (2, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900), (q: 0, s: (3, 1), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
INFO:root:OR: AND step didn't fail
INFO:root:AND: Simulating s: (4, -1), q: 1
INFO:root:OR: illegal action 1 in state (4, -1)
INFO:root:AND: fail at history [(q: 0, s: (4, 0), l: 1.000)]
INFO:root:AND: Backtracking left
INFO:root:AND: Redoing s: (3, 0)
INFO:root:OR: redoing: (1,False) -> (0,1)
INFO:root:AND: not fail at history [(q: 0, s: (4, 0), l: 1.000), (q: 1, s: (3, 0), l: 0.900)]
Traceback (most recent call last):
  File "/Users/L/Sync/Documents/Edinburgh/Dissertation/pandor/source/pandor.py", line 381, in <module>
    success = planner.synth_plan(states_bound=2, lpc_desired=0.95)
  File "/Users/L/Sync/Documents/Edinburgh/Dissertation/pandor/source/pandor.py", line 145, in synth_plan
    self.and_step(self.contr.init_state, self.env.init_states_p, [], first_and_step=True)
  File "/Users/L/Sync/Documents/Edinburgh/Dissertation/pandor/source/pandor.py", line 204, in and_step
    self.or_step(q, s_k, p_k, history[:])
  File "/Users/L/Sync/Documents/Edinburgh/Dissertation/pandor/source/pandor.py", line 331, in or_step
    if self.and_step(q_next, action, history) != AND_FAILURE:
  File "/Users/L/Sync/Documents/Edinburgh/Dissertation/pandor/source/pandor.py", line 204, in and_step
    self.or_step(q, s_k, p_k, history[:])
  File "/Users/L/Sync/Documents/Edinburgh/Dissertation/pandor/source/pandor.py", line 335, in or_step
    assert not self.backtracking
AssertionError

Process finished with exit code 1
